package kr.ac.kopo.student;

public class StuList00 {

	public static void main(String[] args) {
		/*1.브라우저 주소창에
		 * http://localhost:8000/exwed/student/list.jsp 를 입력하여 접속하면,
		 * 브라우저 화면에 학생목록(학번,이름)이 출력되도록 구현
		 * 2.학생목록 화면에서 "학생추가"링크를 클릭하면,
		 * http://localhost:8000/exwed/student/addform.jsp 로 이동하여,
		 * 학생의 학번,이름,성적을 입력할 수 있는 입력엘리먼트들을 출력
		 * (학번,이름,성적 파라미터 이름은 stuNo,stuName,stuScore로 설정)
		 * 입력엘리먼트에 값을 입력하고 저장 버튼을 클릭하면
		 * http://localhost:8000/exwed/student/add.jsp 로 이동하여,
		 * 입력한 학생 정보를 데이터베이스에 저장하고 학생목록 화면으로 이동
		 * 3.학생목록화면에서 각 학생들의 학번을 클릭하면,
		 * http://localhost:8000/exwed/student/editform.jsp 로 이동하여,
		 * 해당 학생의 학번,이름,성적을 입력할 수 있는 입력엘리먼트들을 출력
		 * (입력엘리먼트에는 해당 학생의 현재 학번,이름,성적을 출력)
		 * 3-1.저장 버튼을 클릭하면
		 * http://localhost:8000/exwed/student/edit.jsp로 이동하여,
		 * 데이터베이스에서 해당 학생의 이름과 성적으로 변경하고 학생목록 화면으로 이동
		 * 3-2. 삭제 버튼을 클릭하면
		 * http://localhost:8000/exwed/student/del.jsp 로 이동하여,
		 * 데이터베이스에서 해당 학생을 삭제하고 학생목록 화면으로 이동
		 * 
		 * 4. 학생목록을 다음과 같은 표 형태로 출력하고,
		 *  '학번'을 클릭하면 학번순으로 정렬하여 출력하고,
		 *  '이름'을 클릭하면 학번순으로 정렬하여 출력
		 * -------------------
		 * |  학번      |  이름      |
		 * -------------------
		 * |  1234  |  포로리   |
		 * -------------------
		 * |  5678  |  너부리   |
		 * -------------------
		 * '학번'기준으로 정렬된 상태에서 '학번'을 다시 클릭하면,
		 * 오름차순과 내림차순을 번갈아서 정렬
		 * '이름'기준으로 정렬된 상태에서 '이름'을 다시 클릭하면
		 * 오름차순과 내림차순을 번갈아서 정렬
		 * */

		
		
	}

}
