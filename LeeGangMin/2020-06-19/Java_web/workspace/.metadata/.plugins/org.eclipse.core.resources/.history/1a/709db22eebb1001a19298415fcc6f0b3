<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>ex_web</display-name>
  <!-- 특정 파일이 아닌 폴더를 주소로 요청받았을 때, -->
  <!-- 해당 폴더에 존재하는 어떤 파일을 응답으로 전송하고 싶은지를 설정 -->
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
<!--   com.exam.LifeServlet 서블릿 클래스를 LifeServ라는 이름으로 등록 -->
  <servlet>
		<servlet-name>LifeServ</servlet-name>
<!-- 		<servlet-class>/ex_web/src/com/exam/LifeServlet.java</servlet-class> -->
		<servlet-class>com.exam.LifeServlet</servlet-class>
  </servlet>
<!--   /cycle.do 주소(경로)로 요청이 오면, LifeServ라는 이름으로 등록된 서블릿을 실행 -->

  <servlet-mapping>
  		<servlet-name>LifeServ</servlet-name>
  		<url-pattern>/cycle.do</url-pattern>
  </servlet-mapping>
  
<!--   kr.ac.kopo.comm.CharacterEncodingFilter 객체를 encFilter라는 이름의 필터로 등록 (톰캣에)-->
  <filter>
  	<filter-name>encFilter</filter-name>
  	<filter-class>kr.ac.kopo.comm.CharacterEncodingFilter</filter-class>
<!--   	필터의 초기화 작업에 필요한 파라미터로서 encoding 값을 UTF-8 로 설정 -->
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  </filter>
  
<!--   필터를 실행할 때 설정 -->
<!-- *.do 는 서블릿, /* 는 모든 경로로 요청이 오면 encFilter라는 이름으로 등록된 필터를 실행-->
  <filter-mapping>
  	<filter-name>encFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
<!--   <servlet> -->
<!--   	<servlet-name>InitServ</servlet-name> -->
<!--   	<servlet-class>kr.ac.kopo.comm.InitServlet</servlet-class> -->
<!--   	load-on-startup 값이 음수인 경우 : 웹 서버(톰캣)의 전략에 따라서 서플릿 객체 생성 -->
<!-- 								   일반적으로는 지정된 주소로 요청이 왔을 때 서블릿 객체 생성(기본값) -->
<!-- 								   미리 만들어진다는 보장이 없음 -->
<!--   	load-on-startup 값이 0 이상인 경우 : 웹 애플리케이션 시작시 서블릿 객체 생성 . 작은 값을 갖는 서블릿들부터 객체 생성	 -->
<!--   	<load-on-startup>0</load-on-startup> -->
<!--   </servlet> -->
  
  	<listener>
  		<listener-class>kr.ac.kopo.comm.InitListener</listener-class>
  	</listener>
  	
<!-- 웹 애플리케이션 전체에서 사용 가능한 서블릿 컨텍스트의 초기화 파라미터 설정 -->
<!-- 리스너에는 init 파라미터를 들고 갈 수 없음 -->
  	<context-param>
  		<param-name>driverClass</param-name>
  		<param-value></param-value>
  	</context-param>
  
</web-app>