<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.ac.kopo.bbs.BbsDao">

  <select id="selectMemberList" resultType="kr.ac.kopo.member.MemberVo">
    SELECT mem_id as memId, mem_pass as memPass, mem_name as memName, mem_point as memPoint FROM member
  </select>
  
<!--   실행에 필요한 값을 받는 경우에는, 받을 값을 타입을 parameterType 속성에 지정 -->
<!-- String의 경우, java.lang.String 또는 string(소문자) 둘 다 가능 -->
  <select id="selectMember" parameterType="string" resultType="kr.ac.kopo.member.MemberVo">
  	SELECT mem_id as memId, mem_pass as memPass, mem_name as memName, mem_point as memPoint FROM member WHERE mem_id=#{memId}
  </select>
  
<!--   파라미터로 받은 객체의 속성(변수)값을 SQL문에 주입하기 위해서 #{변수명} 을 사용 -->
  <insert id="insertMember" parameterType="kr.ac.kopo.member.MemberVo">
  	INSERT INTO member (mem_id, mem_pass, mem_name, mem_point) VALUES ( #{memId}, #{memPass}, #{memName}, #{memPoint} )
  </insert>
  
  <update id="updateMember" parameterType="kr.ac.kopo.member.MemberVo">
  	UPDATE member SET mem_name = #{memName}, mem_point = #{memPoint} WHERE mem_id = #{memId}
  </update>
  
<!--   parameterType이 단일값을 갖는 객체인 경우(String, Integer, ...)에는 #{}의 이름은 무엇을 사용해도 상관없음 -->
<!-- 보통은 #{value}나 #{파라미터값(여기서는 memId)} 로 쓴다 -->
  <delete id="deleteMember" parameterType="string">
  	DELETE FROM member WHERE mem_id = #{memId}
  </delete>
  
  <select id="selectLoginMember" parameterType="kr.ac.kopo.member.MemberVo" resultType="kr.ac.kopo.member.MemberVo">
  	SELECT mem_id as memId, mem_pass as memPass, mem_name as memName, mem_point as memPoint FROM member WHERE mem_id=#{memId} and mem_pass=#{memPass}
  </select>
  
</mapper>