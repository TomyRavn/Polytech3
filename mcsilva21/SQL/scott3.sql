--1.복습 연봉이 2000~3000인 사람
SELECT * FROM EMP
WHERE sal between 2000 and 3000;
--2. 연봉을 구하여라
SELECT sal,comm,sal*12+comm as "연 봉" FROM EMP;
--3.연봉의 null값을 0으로 바꿔라
SELECT sal,comm,sal*12+nvl(+comm,0) as "연 봉" FROM EMP;
SELECT sal,comm,nvl2(comm,sal*12+comm,sal*12) as "연 봉" FROM EMP;
--4.DECODE 를 사용하여 직극별 인상된 급여를 출력하여라.
select empno,ename,job,sal,
DECODE(JOB,
        'MANAGER',SAL*1.1,
        'SALESMAN',SAL*1.05,
        'ANALYST',SAL,
        SAL*1.03) AS UPSAL
FROM EMP;        
--5.CASE를 사용하여 직극별 인상된 급여를 출력하여라.
select empno,ename,job,sal,
CASE JOB
WHEN 'MANAGER' THEN SAL*1.1
WHEN 'SALESMAN'THEN SAL*1.05
WHEN 'ANALYST'THEN SAL
ELSE SAL*1.03
END AS UPSAL
FROM EMP;     
--6.CASE문으로 세금을 출력하여라.
Select empno,ename,comm,
case 
when comm is null then '해당사항 없음'
when comm =0  then '수당 없음'
when comm >0 then '수당:'||comm
end as comm_text
from emp;
--6장 연습문제 1번
SELECT EMPNO,ENAME,
RPAD(SUBSTR(EMPNO,1,2),4,'*')AS MASKING_EMPNO,
ENAME,
RPAD(SUBSTR(ENAME, 1, 1), LENGTH(ENAME), '*') AS MASKING_ENAME
FROM EMP
WHERE LENGTH(ENAME)=5;
--6장 연습문제 2번
SELECT EMPNO,ENAME,SAL,
TRUNC(SAL/21.5,2) AS DAY_PAY,
ROUND(SAL/21.5/8,1) AS TIME_PAY
FROM EMP;
--6장 연습문제 3번
SELECT EMPNO,ENAME,HIREDATE,
TO_CHAR(NEXT_DAY(ADD_MONTHS(HIREDATE,3),'월'),'YYYY-MM-DD')AS R_JOB,
NVL(TO_CHAR(COMM),'N/A')AS COMM
FROM EMP;
--6장 연습문제 4번
select empno,ename,MGR,
CASE 
WHEN MGR IS NULL THEN '0000'
WHEN SUBSTR(MGR,1,2)='78'THEN '8888'
WHEN SUBSTR(MGR,1,2)='77'THEN '7777'
WHEN SUBSTR(MGR,1,2)='76'THEN '6666'
WHEN SUBSTR(MGR,1,2)='75'THEN '5555'
ELSE TO_CHAR(MGR)
END AS CHG_MGR
FROM EMP;
--7-1 봉급의 합계,최대값,최소값,평균값을 구히여라
SELECT SUM(SAL),MAX(SAL),MIN(SAL),AVG(SAL)
FROM EMP;
--7-2 사원수 구하기
SELECT COUNT(EMPNO)
FROM EMP;
--7-3 부서의 수 구하기
SELECT COUNT(*)
FROM DEPT;
--7-4 보너스 없는 사원의 수
SELECT COUNT(*)
FROM EMP
WHERE COMM IS NULL;
--7-5 10번 부서의 사원 수
SELECT COUNT(*)
FROM EMP
WHERE DEPTNO=10;
--7-6 각 부서별 사원수
SELECT DEPTNO,COUNT(*)
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

--7-7 각 부서별 최고 봉급
SELECT DEPTNO,MAX(SAL)
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

--7-8 각 부서별 최장기간 근무한 사람의 입사일
SELECT DEPTNO,MIN(HIREDATE)
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;
--7-9 부서번호 출력
SELECT DEPTNO
FROM EMP;
--7-10 부서번호 출력 중복제거
SELECT DISTINCT DEPTNO
FROM EMP;
--7-11 봉급 출력
SELECT SUM(SAL),SUM(ALL SAL),SUM(DISTINCT SAL)
FROM EMP;
--7-12 입사일 출력 중복제거,
SELECT DISTINCT HIREDATE
FROM EMP;
--7-13 30번 부서의 사원수
SELECT count(*)
FROM EMP
where deptno=30;
--7-14 10번부서의 최고 봉급액
SELECT max(sal)
FROM EMP
where deptno=10;
--7-15 10번부서의 최저 봉급액
SELECT min(sal)
FROM EMP
where deptno=10;
--7-16 20번 부서의 최근 입사자의 입사일
SELECT max(hiredate)
FROM EMP
where deptno=20;
--7-17 20번 부서의 최고 장기간 근무한 사람의 입사일
SELECT min(hiredate)
FROM EMP
where deptno=20;
--7-18 30번 부서의 평균 봉급
SELECT avg(sal)
FROM EMP
where deptno=30;
--7-19 30번 부서의 평균 봉급 중복값 제거
SELECT avg(DISTINCT sal)
FROM EMP
where deptno=30;
--1분복습.185P
SELECT AVG(COMM)
FROM EMP
WHERE DEPTNO=30;
--7-20 부서번호 10,20,30사람드의 평균 급여를 소수자리 없애서 출력
SELECT ROUND(avg(sal)),'10' AS DEPTNO FROM EMP WHERE DEPTNO = 10
UNION ALL
SELECT ROUND(avg(sal)),'20' AS DEPTNO FROM EMP WHERE DEPTNO = 20
UNION ALL
SELECT ROUND(avg(sal)),'30' AS DEPTNO FROM EMP WHERE DEPTNO = 30;
--7-21 부서번호,직급별 평균 봉급
SELECT DEPTNO,JOB,AVG(SAL)
FROM EMP
GROUP BY DEPTNO,JOB
ORDER BY DEPTNO,JOB;
--188 1분복습
SELECT AVG(COMM)DEPTNO
FROM EMP
GROUP BY DEPTNO;
--7-22 부서와 직급별로 봉급이 2000이상인 사원들의 부서번호,직급,평균 봉급,부서번호,
--직급 순으로 출력
SELECT DEPTNO,JOB,AVG(SAL)
FROM EMP
GROUP BY DEPTNO,JOB
HAVING AVG(SAL)>=2000
ORDER BY DEPTNO,JOB;
--7-23
SELECT DEPTNO,JOB,AVG(SAL)
FROM EMP
GROUP BY DEPTNO,JOB
HAVING AVG(SAL)>=2000 --WHERE 절에는 그륩함수를 쓸 수 없음.
ORDER BY DEPTNO,JOB;
--7-24 봉급이 3000이하인 사원들을 대상으로 부서,직급별,평균봉급이 2000이상인 
SELECT DEPTNO,JOB,AVG(SAL)
FROM EMP
WHERE SAL <=3000
GROUP BY DEPTNO,JOB
HAVING AVG(SAL)>=2000 
ORDER BY DEPTNO,JOB;
--194 1분복습
SELECT DEPTNO,JOB,AVG(SAL)
FROM EMP
GROUP BY DEPTNO,JOB
HAVING AVG(SAL)>=500
ORDER BY DEPTNO,JOB;
--7-24
SELECT DEPTNO,JOB,COUNT(*),MAX(SAL),SUM(SAL),AVG(SAL)
FROM EMP
GROUP BY DEPTNO,JOB
ORDER BY DEPTNO,JOB;
--7-25 부서,직급별 사원수,최대 봉급,봉급 합계,평균 봉급 출력
SELECT DEPTNO,JOB,COUNT(*),MAX(SAL),SUM(SAL),AVG(SAL)
FROM EMP
GROUP BY ROLLUP(DEPTNO,JOB)
ORDER BY DEPTNO,JOB;
--7-26 
SELECT DEPTNO,JOB,COUNT(*),MAX(SAL),SUM(SAL),AVG(SAL)
FROM EMP
GROUP BY CUBE(DEPTNO,JOB)
ORDER BY DEPTNO,JOB;
--7-27 DEPTNO을 먼저 그륩화한 rollup함수에 저장
SELECT DEPTNO,JOB,COUNT(*)
FROM EMP
GROUP BY DEPTNO,ROLLUP(JOB);
--7-28 job을 먼저 그륩화한 rollup함수에 DEPTNO저장
SELECT DEPTNO,JOB,COUNT(*)
FROM EMP
GROUP BY JOB, ROLLUP(DEPTNO);
--7-29
SELECT DEPTNO,JOB,COUNT(*)
FROM EMP
GROUP BY GROUPING SETS(DEPTNO,JOB)
ORDER BY DEPTNO,JOB;
--7-30
SELECT DEPTNO,JOB,COUNT(*)
FROM EMP
GROUP BY ROLLUP(JOB,DEPTNO); --전체요약이 맨 마지막에서 출력됨.
--7-31 부서별,직급별로 사원의 갯수를 구하여라
SELECT DEPTNO,JOB,COUNT(*)
FROM EMP
GROUP BY GROUPING SETS(DEPTNO,JOB)
ORDER BY DEPTNO,JOB;
--7-32
SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL),
GROUPING(DEPTNO),
GROUPING(JOB)
FROM EMP
GROUP BY CUBE(DEPTNO, JOB) --각각의 항목에 대해서 자세하게 보여줌
ORDER BY DEPTNO, JOB;
--7-33
SELECT DECODE(GROUPING(DEPTNO), 1, 'ALL_DEPT', DEPTNO) AS DEPTNO,--부서번호 그륩핑한게 1이면 ALL_DEPT로 출력하고 
DECODE(GROUPING(JOB), 1, 'ALL_JOB', JOB) AS JOB, --JOB도 그륩핑하여 1이면 ALL_JOB으로 출력
COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;
