<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- 어노테이션을 사용하여 spring MVC 애플리케이션을 작성할 때 필요한 객체들을 자동 등록-->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->

	<!-- 컨트롤러가 문자열(뷰 이름)을 반환한 경우, -->
	<!-- 그 문자열의 앞에 "/WEB-INF/views/" 를 붙이고, 뒤에 ".jsp"를 붙여서 -->
	<!-- 해당 문자열의 JSP 파일 경로로 이동(forward) 시키는 역할을 수행 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- kr.ac.kopo 패키지(폴더) 아래에 있는 모든 클래스들을 조사하여, -->
	<!-- @Component, @Controller, @Service, @Respository 등이 붙어 있는 클래스들을  -->
	<!-- 스프링(DispatcherServlet)에 자동 등록 -->
	<context:component-scan base-package="kr.ac.kopo" />
	<!-- @Controller : 웹 요청을 받았을 때 실행되는 메서드를 담고 있는 객체에 사용 -->
	<!-- @Service : 서비스 계층의 객체에 사용 -->
	<!-- @Respository : DAO 계층의 객체에 사용 -->
	
	
	
</beans:beans>
