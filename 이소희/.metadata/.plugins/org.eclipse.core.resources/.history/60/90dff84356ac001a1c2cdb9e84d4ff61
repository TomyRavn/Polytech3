package kr.ac.kopo.bbs;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

//DAO = Data Access Object
//자바 데이터(객채) 데이터 베이스 데이터(테이블) 사이의 상호 변환을 담당

public class BbsDaoJdbc {
	{
		try {
			Class.forName("oracle.jdbc.OracleDriver");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

	String url = "jdbc:oracle:thin:@localhost:1521:xe";
	String user = "com";
	String password = "com01";

	public ArrayList<BbsVo> selectBbsList() {
		ArrayList<BbsVo> list = new ArrayList<BbsVo>();
		String sql = "SELECT bbs_no, bbs_title, bbs_content, bbs_writer, bbs_reg_date, bbs_count FROM bbs";

		try (Connection conn = DriverManager.getConnection(url, user, password);
				PreparedStatement pstmt = conn.prepareStatement(sql);
				ResultSet rs = pstmt.executeQuery();) {

			while (rs.next()) {
				BbsVo vo = new BbsVo();
				vo.setBbsNo(rs.getInt("bbs_no"));
				vo.setBbsTitle(rs.getString("bbs_title"));
				vo.setBbsContent(rs.getString("bbs_content"));
				vo.setBbsWriter(rs.getString("bbs_writer"));
				vo.setBbsRegDate(rs.getString("bbs_reg_date"));
				vo.setBbsCount(rs.getInt("bbs_count"));

				list.add(vo);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return list;
	}

	public int insertBbs(BbsVo vo) {
		int num = 0;

		String sql = "INSERT INTO bbs (bbs_no, bbs_title, bbs_content, bbs_writer, bbs_count) "
				+ "VALUES (?,?,?,?,?,?)";
		try (Connection conn = DriverManager.getConnection(url, user, password);
				PreparedStatement pstmt = conn.prepareStatement(sql);) {
			pstmt.setInt(1, vo.getBbsNo());
			pstmt.setString(2, vo.getBbsTitle());
			pstmt.setString(3, vo.getBbsContent());
			pstmt.setString(4, vo.getBbsWriter());
			
			pstmt.setInt(5, vo.getBbsCount());
			num = pstmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return num;
	}

	public int deleteBbs(String bbsNo) {
		int num = 0;

		String sql = "DELETE FROM bbs WHERE bbs_no = ?";

		try (Connection conn = DriverManager.getConnection(url, user, password);
				PreparedStatement pstmt = conn.prepareStatement(sql);) {
			pstmt.setString(1, bbsNo);
			num = pstmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return num;
	}

	public BbsVo selectBbs(String bbsNo) {
		BbsVo vo = null;
		String sql = "SELECT bbs_no, bbs_title, bbs_content, bbs_writer, bbs_reg_date, bbs_count FROM bbs WHERE bbs_no = ?";

		try (Connection conn = DriverManager.getConnection(url, user, password);
				PreparedStatement pstmt = conn.prepareStatement(sql);) {
			pstmt.setString(1, bbsNo);
			try (ResultSet rs = pstmt.executeQuery();) {
				if (rs.next()) {
					vo = new BbsVo();
					pstmt.setInt(1, vo.getBbsNo());
					pstmt.setString(2, vo.getBbsTitle());
					pstmt.setString(3, vo.getBbsContent());
					pstmt.setString(4, vo.getBbsWriter());
					pstmt.setDate(5, vo.getBbsRegDate());
					pstmt.setInt(6, vo.getBbsCount());

				}
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return vo;
	}

	public int updateBbs(BbsVo vo) {
		int num = 0;

		String sql = "UPDATE bbs SET bbs_title=?, bbs_content=? WHERE bbs_no = ?";
		try (Connection conn = DriverManager.getConnection(url, user, password);
				PreparedStatement pstmt = conn.prepareStatement(sql);) {
			pstmt.setString(1, vo.getBbsTitle());
			pstmt.setString(2, vo.getBbsContent());
			pstmt.setInt(3, vo.getBbsNo());

			num = pstmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return num;
	}
}
